#!/usr/bin/env php
<?php

use SPSOstrov\AppConsole\Run;

require_once getenv("SPSO_APP_AUTOLOAD_PHP");

function invokeExec(string $plugin, string $environment, ?string $user, string $terminalMode, array $command): int
{
    if (!preg_match('/^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$/', $plugin)) {
        fprintf(STDERR, "Error: Invalid exec plugin: %s\n", $plugin);
        return 1;
    }
    $pluginCommand = ".exec-" . $plugin;
    $ret = Run::app(array_merge(["--quiet", $pluginCommand, $environment, $user ?? '', $terminalMode], $command));
    if ($ret === 1) {
        $ret = Run::app(["--test-exists", $pluginCommand]);
        if ($ret !== 0) {
            fprintf(STDERR, "Error: Exec plugin does not exist: %s\n", $plugin);
            return 1;
        }
    }
    return $ret;
}

array_shift($argv);
$plugin = array_shift($argv);
if ($plugin === "") {
    $plugin = null;
}
$terminalMode = array_shift($argv);
$user = array_shift($argv);
if ($user === '') {
    $user = null;
}

if ($terminalMode === "T") {
    $terminalMode = "no-terminal";
} elseif ("$terminalMode" === "t") {
    $terminalMode = "terminal";
}

if (empty($argv)) {
    fprintf(STDERR, "Error: No container or environment was specified\n");
    exit(1);
}

$environment = array_shift($argv);

if (empty($argv)) {
    $argv[] = 'bash';
}

exit(invokeExec($plugin ?? 'docker', $environment, $user, $terminalMode, $argv));
